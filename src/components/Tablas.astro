---
interface Product {
  id: string;
  name: string;
  description: string;
  weight: number;
  price: number;
}

interface Menu {
    id: string,
    name: string,
    price: number,
    description: string,
    products: Product[],
}

/*let products: Product[] = [];*/

try {
  const response = await fetch('http://127.0.0.1:8080/products');
  if (response.ok) {
    let products = await response.json();
    console.log(products);
  } else {
    console.error('Error fetching products:', response.status);
  }
} catch (error) {
  console.error('Error fetching products:', error);
}
---

<table id="products-table" class="table-auto w-full text-left text-gray-300 bg-zinc-800">
  <thead>
    <tr class="bg-zinc-900 text-white">
      <th class="px-4 py-2">Nombre</th>
      <th class="px-4 py-2">Descripción</th>
      <th class="px-4 py-2">Gramos</th>
      <th class="px-4 py-2">Precio (ARS)</th>
      <th class="px-1 py-1">Eliminar</th>
    </tr>
  </thead>
  <tbody>
    
    {products.map((product) => (
      
      <tr class="border-b border-zinc-700" key={product.id}>
        <td class="px-4 py-2">{product.name}</td>
        <td class="px-4 py-2">{product.description}</td>
        <td class="px-4 py-2">{product.weight}g</td>
        <td class="px-4 py-2">${product.price.toFixed(2)}</td>
        <!-- Se agrega un ID único basado en el ID del producto para identificar el botón -->
        <td class="px-4 py-2"><button id={`delete-button-${product.id}`} data-product-id={product.id} class="fa-solid fa-x w-8 h-8 bg-red-800 text-white rounded-full hover:scale-105 ease-in duration-300"></button></td>
      </tr>
    ))}
  </tbody>
</table>

<script>

  document.addEventListener('DOMContentLoaded', () => {
    const productsTable = document.getElementById('products-table');

    // Seleccionar todos los botones de eliminar por su clase
    const deleteButtons = document.querySelectorAll('[id^="delete-button-"]');

    deleteButtons.forEach((button) => {
      button.addEventListener('click', async (event) => {
        const productId = button.getAttribute('data-product-id'); // Obtener el ID del producto

        if (!productId) {
          console.error('ID del producto no encontrado');
          return;
        }

        try {
          const response = await fetch(`http://127.0.0.1:8080/products/${productId}`,{
            method:'DELETE',
            headers:{
              'Content-Type': 'application/json',
            },
          });

          if (response.ok) {
            console.log('Producto eliminado con éxito.');

            // Eliminar la fila del producto de la tabla sin recargar
            const row = button.closest('tr');
            row?.remove();
          } else {
            console.error('Error al eliminar el producto:', response.status);
          }
        } catch (error) {
          console.error('Error en la solicitud de eliminación:', error);
        }
      });
    });
  });
</script>
